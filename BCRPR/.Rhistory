library(BCRPR)
library(BCRPR)
library(BCRPR)
importbcrp('PN01205PM','2005-8','2020-9')
importbcrp<-function(x,y,z){
# Llamar al Url
url <-paste('https://estadisticas.bcrp.gob.pe/estadisticas/series/api/',x,'/json/',y,'/',z,'/', sep="")
# Descargamos el url
tmp1  <- fromJSON(readLines(url, warn="F"))
# Cambiamos el formato de los datos y cambiamos el valor de las variables con missing values.
dato <-as.data.frame(lapply(tmp1$periods, function(y) gsub("n.d.", "-99999.99", y)))
# Cambiamos el nombre del archivo usando el ID que lo identifica.
names(dato) <- c("Fecha",paste("",x,"",sep=""))
#View(dato)
# Guardar en csv
#write.csv2(dato, file=paste(x,'.csv', sep=""))
#  }, error=function(e){})
return(dato)
}
importbcrp('PN01205PM','2005-8','2020-9')
tmp1  <- fromJSON(readLines(url, warn="F"))
tmp1  <- fromJSON(readLines(url, warn="F"))
install.packages("fromJSON")
install.packages("rjson")
importbcrp('PN01205PM','2005-8','2020-9')
library(rjson)
importbcrp('PN01205PM','2005-8','2020-9')
importbcrp<-function(x,y,z){
# Llamar al Url
url <-paste('https://estadisticas.bcrp.gob.pe/estadisticas/series/api/',x,'/json/',y,'/',z,'/', sep="")
# Descargamos el url
tmp1  <- fromJSON(readLines(url, warn="F"))
# Cambiamos el formato de los datos y cambiamos el valor de las variables con missing values.
dato <-as.data.frame(lapply(tmp1$periods, function(y) gsub("n.d.", "-99999.99", y)))
# Cambiamos el nombre del archivo usando el ID que lo identifica.
names(dato) <- c("Fecha",paste("",x,"",sep=""))
#View(dato)
# Guardar en csv
#write.csv2(dato, file=paste(x,'.csv', sep=""))
#  }, error=function(e){})
return(dato)
}
importbcrp('PN01205PM','2005-8','2020-9')
importbcrp('PN01205PM','2005-8','2020-9')
library(rjson)
importbcrp('PN01205PM','2005-8','2020-9')
library(BCRPR)
importbcrp('PN01205PM','2005-8','2020-9')
require(jsonlite)
require(ggplot2)
require(lubridate)
require(stringr)
library(foreign)
library(readxl)
library(tidyverse)
require(tidyr)
library(dplyr)
require(plyr)
importbcrp('PN01205PM','2005-8','2020-9')
library(BCRPR)
require(jsonlite)
require(ggplot2)
require(lubridate)
require(stringr)
library(foreign)
library(readxl)
library(tidyverse)
require(tidyr)
library(dplyr)
require(plyr)
#Generating columns of characters with each ID
metadato <- c('PN03371FQ','PN03372FQ','PN03373FQ')
for (i in 1:length(metadato)){
#  tryCatch({
# Indicamos el ID, el formato, las fechas y el idioma. Llamamos "url" a esta combinación
url <-paste('https://estadisticas.bcrp.gob.pe/estadisticas/series/api/',metadato[i],'/json/1940/2018/ing', sep="")
# Descargamos el url indicado
tmp1  <- fromJSON(readLines(url, warn="F"))
# Cambiamos el formato de los datos y cambiamos el valor de las variables con missing values.
dato <-as.data.frame(lapply(tmp1$periods, function(y) gsub("n.d.", "-99999.99", y)))
# Cambiamos el nombre del archivo usando el ID que lo identifica.
names(dato) <- c("name",paste("",metadato[i],"",sep=""))
# Creamos un nuevo documento indicando el formato
# El formato "dta" se usa en el software Stata
write.dta(dato, file=paste(metadato[i],'.dta', sep=""))
# El formato "csv" se puede usar en distintos softwares incluído Excel
write.csv2(dato, file=paste(metadato[i],'.csv', sep=""))
#  }, error=function(e){})
}
View(dato)
View(dato)
for (i in 1:length(metadato)){
#  tryCatch({
# Indicamos el ID, el formato, las fechas y el idioma. Llamamos "url" a esta combinación
url <-paste('https://estadisticas.bcrp.gob.pe/estadisticas/series/api/',metadato[i],'/json/1940/2018/ing', sep="")
# Descargamos el url indicado
tmp1  <- fromJSON(readLines(url, warn="F"))
# Cambiamos el formato de los datos y cambiamos el valor de las variables con missing values.
dato <-as.data.frame(lapply(tmp1$periods, function(y) gsub("n.d.", "-99999.99", y)))
# Cambiamos el nombre del archivo usando el ID que lo identifica.
names(dato) <- c("name",paste("",metadato[i],"",sep=""))
# Creamos un nuevo documento indicando el formato
# El formato "dta" se usa en el software Stata
write.dta(dato, file=paste(metadato[i],'.dta', sep=""))
# El formato "csv" se puede usar en distintos softwares incluído Excel
write.csv2(dato, file=paste(metadato[i],'.csv', sep=""))
#  }, error=function(e){})
}
View(dato)
View(tmp1)
for (i in 1:length(metadato)){
#  tryCatch({
# Indicamos el ID, el formato, las fechas y el idioma. Llamamos "url" a esta combinación
url <-paste('https://estadisticas.bcrp.gob.pe/estadisticas/series/api/',metadato[i],'/json/1940/2018/ing', sep="")
# Descargamos el url indicado
tmp1  <- fromJSON(readLines(url, warn="F"))
# Cambiamos el formato de los datos y cambiamos el valor de las variables con missing values.
dato <-as.data.frame(lapply(tmp1$periods, function(y) gsub("n.d.", "-99999.99", y)))
# Cambiamos el nombre del archivo usando el ID que lo identifica.
names(dato) <- c("name",paste("",metadato[i],"",sep=""))
# Creamos un nuevo documento indicando el formato
# El formato "dta" se usa en el software Stata
write.dta(dato, file=paste(metadato[i],'.dta', sep=""))
# El formato "csv" se puede usar en distintos softwares incluído Excel
write.csv2(dato, file=paste(metadato[i],'.csv', sep=""))
#  }, error=function(e){})
}
for (i in 1:length(metadato)){
#  tryCatch({
# Indicamos el ID, el formato, las fechas y el idioma. Llamamos "url" a esta combinación
url <-paste('https://estadisticas.bcrp.gob.pe/estadisticas/series/api/',metadato[i],'/json/1940/2018/ing', sep="")
# Descargamos el url indicado
tmp1  <- fromJSON(readLines(url, warn="F"))
# Cambiamos el formato de los datos y cambiamos el valor de las variables con missing values.
dato <-as.data.frame(lapply(tmp1$periods, function(y) gsub("n.d.", "-99999.99", y)))
# Cambiamos el nombre del archivo usando el ID que lo identifica.
names(dato) <- c("name",paste("",metadato[i],"",sep=""))
# Creamos un nuevo documento indicando el formato
# El formato "dta" se usa en el software Stata
write.dta(dato, file=paste(metadato[i],'.dta', sep=""))
# El formato "csv" se puede usar en distintos softwares incluído Excel
write.csv2(dato, file=paste(metadato[i],'.csv', sep=""))
#  }, error=function(e){})
}
metadato <- c('PN03371FQ','PN03372FQ','PN03373FQ')
for (i in 1:length(metadato)){
#  tryCatch({
# Indicamos el ID, el formato, las fechas y el idioma. Llamamos "url" a esta combinación
url <-paste('https://estadisticas.bcrp.gob.pe/estadisticas/series/api/',metadato[i],'/json/1940/2018/ing', sep="")
# Descargamos el url indicado
tmp1  <- fromJSON(readLines(url, warn="F"))
# Cambiamos el formato de los datos y cambiamos el valor de las variables con missing values.
dato <-as.data.frame(lapply(tmp1$periods, function(y) gsub("n.d.", "-99999.99", y)))
# Cambiamos el nombre del archivo usando el ID que lo identifica.
names(dato) <- c("name",paste("",metadato[i],"",sep=""))
# Creamos un nuevo documento indicando el formato
# El formato "dta" se usa en el software Stata
write.dta(dato, file=paste(metadato[i],'.dta', sep=""))
# El formato "csv" se puede usar en distintos softwares incluído Excel
write.csv2(dato, file=paste(metadato[i],'.csv', sep=""))
#  }, error=function(e){})
}
View(tmp1)
View(dato)
library(BCRPR)
importbcrp('PN01205PM','2005-8','2020-9')
importbcrp<-function(x,y,z){
# Llamar al Url
url <-paste('https://estadisticas.bcrp.gob.pe/estadisticas/series/api/',x,'/json/',y,'/',z,'/', sep="")
# Descargamos el url
tmp1  <- fromJSON(readLines(url, warn="F"))
# Cambiamos el formato de los datos y cambiamos el valor de las variables con missing values.
dato <-as.data.frame(lapply(tmp1$periods, function(y) gsub("n.d.", "-99999.99", y)))
# Cambiamos el nombre del archivo usando el ID que lo identifica.
names(dato) <- c("Fecha",paste("",x,"",sep=""))
#View(dato)
# Guardar en csv
#write.csv2(dato, file=paste(x,'.csv', sep=""))
#  }, error=function(e){})
write.dta(dato, file=paste(metadato[i],'.dta', sep=""))
return(dato)
}
importbcrp('PN01205PM','2005-8','2020-9')
importbcrp<-function(x,y,z){
# Llamar al Url
url <-paste('https://estadisticas.bcrp.gob.pe/estadisticas/series/api/',x,'/json/',y,'/',z,'/', sep="")
# Descargamos el url
tmp1  <- fromJSON(readLines(url, warn="F"))
# Cambiamos el formato de los datos y cambiamos el valor de las variables con missing values.
dato <-as.data.frame(lapply(tmp1$periods, function(y) gsub("n.d.", "-99999.99", y)))
# Cambiamos el nombre del archivo usando el ID que lo identifica.
names(dato) <- c("Fecha",paste("",x,"",sep=""))
#View(dato)
# Guardar en csv
#write.csv2(dato, file=paste(x,'.csv', sep=""))
#  }, error=function(e){})
}
importbcrp('PN01205PM','2005-8','2020-9')
importbcrp('PN01205PM','2005-8','2020-9')
importbcrp<-function(x,y,z){
# Llamar al Url
url <-paste('https://estadisticas.bcrp.gob.pe/estadisticas/series/api/',x,'/json/',y,'/',z,'/', sep="")
# Descargamos el url
tmp1  <- fromJSON(readLines(url, warn="F"))
# Cambiamos el formato de los datos y cambiamos el valor de las variables con missing values.
dato <-as.data.frame(lapply(tmp1$periods, function(y) gsub("n.d.", "-99999.99", y)))
# Cambiamos el nombre del archivo usando el ID que lo identifica.
names(dato) <- c("Fecha",paste("",x,"",sep=""))
#View(dato)
# Guardar en csv
#write.csv2(dato, file=paste(x,'.csv', sep=""))
#  }, error=funct
importbcrp('PN01205PM','2005-8','2020-9')
importbcrp('PN01205PM','2005-8','2020-9')
importbcrp<-function(x,y,z){
# Llamar al Url
url <-paste('https://estadisticas.bcrp.gob.pe/estadisticas/series/api/',x,'/json/',y,'/',z,'/', sep="")
# Descargamos el url
tmp1  <- fromJSON(readLines(url, warn="F"))
# Cambiamos el formato de los datos y cambiamos el valor de las variables con missing values.
dato <-as.data.frame(lapply(tmp1$periods, function(y) gsub("n.d.", "-99999.99", y)))
# Cambiamos el nombre del archivo usando el ID que lo identifica.
names(dato) <- c("Fecha",paste("",x,"",sep=""))
#View(dato)
# Guardar en csv
#write.csv2(dato, file=paste(x,'.csv', sep=""))
#  }, error=function(e){})
}
importbcrp('PN01205PM','2005-8','2020-9')
require(jsonlite)
require(ggplot2)
require(lubridate)
require(stringr)
library(foreign)
library(readxl)
library(tidyverse)
require(tidyr)
library(dplyr)
require(plyr)
importbcrp('PN01205PM','2005-8','2020-9')
View(importbcrp)
importbcrp('PN01205PM','2005-8','2020-9')
library(BCRPR)
importbcrp('PN01205PM','2005-8','2020-9')
require(jsonlite)
require(ggplot2)
require(lubridate)
require(stringr)
library(foreign)
library(readxl)
library(tidyverse)
require(tidyr)
library(dplyr)
require(plyr)
library(BCRPR)
importbcrp('PN01205PM','2005-8','2020-9')
require(jsonlite)
require(ggplot2)
require(lubridate)
require(stringr)
library(foreign)
library(readxl)
library(tidyverse)
require(tidyr)
library(dplyr)
require(plyr)
importbcrp<-function(x,y,z){
# Llamar al Url
url <-paste('https://estadisticas.bcrp.gob.pe/estadisticas/series/api/',x,'/json/',y,'/',z,'/', sep="")
# Descargamos el url
tmp1  <- fromJSON(readLines(url, warn="F"))
# Cambiamos el formato de los datos y cambiamos el valor de las variables con missing values.
dato <-as.data.frame(lapply(tmp1$periods, function(y) gsub("n.d.", "-99999.99", y)))
# Cambiamos el nombre del archivo usando el ID que lo identifica.
names(dato) <- c("Fecha",paste("",x,"",sep=""))
#View(dato)
# Guardar en csv
#write.csv2(dato, file=paste(x,'.csv', sep=""))
#  }, error=function(e){})
}
importbcrp('PN01205PM','2005-8','2020-9')
View(importbcrp)
View(importbcrp)
View(importbcrp)
View(importbcrp)
View(importbcrp)
View(importbcrp)
View(importbcrp)
View(importbcrp)
View(importbcrp)
View(importbcrp)
View(importbcrp)
View(importbcrp)
View(importbcrp)
View(importbcrp)
clear
clearPushBack()
cclear
importbcrp<-function(x,y,z){
# Llamar al Url
url <-paste('https://estadisticas.bcrp.gob.pe/estadisticas/series/api/',x,'/json/',y,'/',z,'/', sep="")
# Descargamos el url
tmp1  <- fromJSON(readLines(url, warn="F"))
# Cambiamos el formato de los datos y cambiamos el valor de las variables con missing values.
dato <-as.data.frame(lapply(tmp1$periods, function(y) gsub("n.d.", "-99999.99", y)))
# Cambiamos el nombre del archivo usando el ID que lo identifica.
names(dato) <- c("Fecha",paste("",x,"",sep=""))
#View(dato)
# Guardar en csv
#write.csv2(dato, file=paste(x,'.csv', sep=""))
#  }, error=function(e){})
return(dato)
}
importbcrp('PN01205PM','2005-8','2020-9')
a<-importbcrp('PN01205PM','2005-8','2020-9')
View(a)
View(a)
View(a)
plot(a)
library(ggplot2)
ggplot(data=a, aes(x=dose, y=len, group=1))
View(a)
ggplot(data=a, aes(x=PN01205PM, y=Fecha, group=1))
ggplot(data=a, aes(x=Fecha, y=PN01205PM, group=1))
a<-importbcrp('PN01205PM','2016-8','2020-9')
plot(a)
ggplot(data=a, aes(x=Fecha, y=PN01205PM, group=1))
a<-importbcrp('PN01205PM','2018-8','2020-9')
plot(a)
ggplot(data=a, aes(x=Fecha, y=PN01205PM, group=1))
a<-importbcrp('PN01205PM','2012','2020')
library(ggplot2)
ggplot(data=a, aes(x=Fecha, y=PN01205PM, group=1))
View(a)
ggplot(data=a, aes(x=Fecha, y=PN01205PM, group=1)) +  geom_line(color="red")+
geom_point()
a<-importbcrp('PM05217PA','1980','2020')
View(a)
ggplot(data=a, aes(x=Fecha, y=PN01205PM, group=1)) +  geom_line(color="red")+
geom_point()
ggplot(data=a, aes(x=Fecha, y=PM05217PA, group=1)) +  geom_line(color="red")+
geom_point()
a<-importbcrp('PM05217PA','2010','2020')
ggplot(data=a, aes(x=Fecha, y=PM05217PA, group=1)) +  geom_line(color="red")+
geom_point()
IPC <- split(a,a$PM05217PA)
View(IPC)
round(IPC, 2)
IPC[1]
IPC
View(IPC)
IPC[1]
round(IPC[1],2)
as.numeric(IPC)
View(IPC)
as.numeric("IPC")
mean(IPC)
View(IPC)
View(a)
library(BCRPR)
a<-importbcrp('PM05217PA','2010','2020')
plot(a)
library(ggplot2)
ggplot(data=a, aes(x=Fecha, y=PM05217PA, group=1)) +  geom_line(color="red")+
geom_point()
plot(a)
library(ggplot2)
ggplot(data=a, aes(x=Fecha, y=PM05217PA, group=1)) +  geom_line(color="red")+
geom_point()
IPC <- split(a,a$PM05217PA)
mean(IPC)
installed.packages("pkgdown")
install.packages("pkgdown")
library(pkgdown)
usethis::use_pkdown()
install.packages("devtools")
library(devtools)
usethis::use_pkdown()
usethis::use_pkgdown()
usethis::use_git()
usethis::use_github(protocol = "https")
pkgdown::build_site()
